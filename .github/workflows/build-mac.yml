name: Build macOS Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # –î–æ–∑–≤–æ–ª—è—î –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Ä—É—á–Ω—É –∑ GitHub UI

jobs:
  build-macos:
    name: Build for macOS
    runs-on: macos-latest  # GitHub –Ω–∞–¥–∞—î Mac runner –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ!
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üîß Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: üì¶ Install MAUI workload
      run: dotnet workload install maui
    
    - name: üîÑ Restore dependencies
      run: |
        dotnet restore MexcSetupApp.Maui.csproj --force
        dotnet add package WTelegramClient --version 4.3.11
        dotnet restore MexcSetupApp.Maui.csproj
    
    - name: üî® Build Release for macOS
      run: dotnet publish MexcSetupApp.Maui.csproj -f net8.0-maccatalyst -c Release -p:RuntimeIdentifier=maccatalyst-x64
    
    - name: üîç Check build output
      run: |
        echo "üìÇ Checking publish directory contents:"
        find bin/Release/net8.0-maccatalyst -name "*.app" -o -name "MexcSetupApp*"
        echo ""
        echo "üìÇ Full directory structure:"
        ls -R bin/Release/net8.0-maccatalyst/maccatalyst-x64/
    
    - name: üì¶ Create ZIP archive
      run: |
        cd bin/Release/net8.0-maccatalyst/maccatalyst-x64/
        if [ -d "MexcSetupApp.Maui.app" ]; then
          echo "Found MexcSetupApp.Maui.app in root"
          zip -r MexcSetupApp-Mac-v${{ github.run_number }}.zip MexcSetupApp.Maui.app
        elif [ -d "publish/MexcSetupApp.Maui.app" ]; then
          echo "Found MexcSetupApp.Maui.app in publish/"
          cd publish
          zip -r MexcSetupApp-Mac-v${{ github.run_number }}.zip MexcSetupApp.Maui.app
        else
          echo "ERROR: Cannot find MexcSetupApp.Maui.app!"
          echo "Available files:"
          ls -la
          exit 1
        fi
        mv MexcSetupApp-Mac-v${{ github.run_number }}.zip ../../../../
    
    - name: üì§ Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MexcSetupApp-Mac-Build-${{ github.run_number }}
        path: MexcSetupApp-Mac-v${{ github.run_number }}.zip
        retention-days: 90
        
    - name: ‚úÖ Build Summary
      run: |
        echo "üéâ Build completed successfully!"
        echo "üì¶ Artifact: MexcSetupApp-Mac-v${{ github.run_number }}.zip"
        ls -lh MexcSetupApp-Mac-v${{ github.run_number }}.zip

  # –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: —Å—Ç–≤–æ—Ä–∏—Ç–∏ GitHub Release –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
  create-release:
    name: Create GitHub Release
    needs: build-macos
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')  # –¢—ñ–ª—å–∫–∏ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ tag
    
    steps:
    - name: üì• Download artifact
      uses: actions/download-artifact@v4
      with:
        name: MexcSetupApp-Mac-Build-${{ github.run_number }}
    
    - name: üöÄ Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: MexcSetupApp-Mac-v${{ github.run_number }}.zip
        body: |
          ## MEXC Setup & Parser v${{ github.ref_name }}
          
          Cross-platform Telegram parser –¥–ª—è MEXC
          
          ### üì• –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è (Mac):
          1. –ó–∞–≤–∞–Ω—Ç–∞–∂ ZIP —Ñ–∞–π–ª
          2. –†–æ–∑–ø–∞–∫—É–π
          3. –ü–µ—Ä–µ—Ç—è–≥–Ω–∏ app –≤ Applications
          4. –ó–∞–ø—É—Å—Ç–∏ (Right-click ‚Üí Open –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É)
          
          ### ‚ú® –§—É–Ω–∫—Ü—ñ—ó:
          - Telegram parsing
          - –í–±—É–¥–æ–≤–∞–Ω–∏–π WebView –±—Ä–∞—É–∑–µ—Ä
          - –û–∫—Ä–µ–º—ñ –≤—ñ–∫–Ω–∞ –¥–ª—è —Ç–æ–∫–µ–Ω—ñ–≤
          - VIP –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
          
          **–†–æ–∑—Ä–æ–±–Ω–∏–∫:** @kovtun_evgenii
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

